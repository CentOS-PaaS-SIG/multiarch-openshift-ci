library identifier: "multiarch-openshift-ci@master",
        retriever: modernSCM([$class: 'GitSCMSource', remote: "https://github.com/CentOS-PaaS-SIG/multiarch-openshift-ci"])

node("paas-sig-ci-slave01") {
  ansiColor('xterm') {
    timestamps {
      stage('init') {
        checkout(
          changelog: true,
          poll: true,
          scm: [
            $class: 'GitSCM',
            branches: [
              [name: 'origin/master']
            ],
            doGenerateSubmoduleConfigurations: false,
            browser: [
              $class: 'GithubWeb',
              repoUrl: 'https://github.com/openshift/origin'
            ],
            extensions: [
              [$class: 'CleanBeforeCheckout'],
              [$class: 'RelativeTargetDirectory', relativeTargetDir: 'origin']
            ],
            gitTool: 'Default',
            submoduleCfg: [],
            userRemoteConfigs: [
              [
                name: 'origin',
                refspec: '+refs/heads/master:refs/remotes/origin/master',
                url: 'https://github.com/openshift/origin.git'
              ],
              [
                name: 'detiber',
                refspec: '+refs/heads/multiarch:refs/remotes/detiber/multiarch',
                url: 'https://github.com/detiber/origin.git'
              ]
            ]
          ]
        )
        sh('''#!/usr/bin/bash -xeu
              pushd origin
              git merge detiber/multiarch
              popd
           ''')
      }

      def arches=['x86_64', 'ppc64le']
      arch_tasks=[:]
      for (arch in arches) {
        def arch_name = arch
        arch_tasks[arch] = {
          stage(arch_name){
            build_result = build(
              job: 'paas-multiarch-test2',
              parameters: [
                string(name: 'ARCH', value: arch_name)
              ]
            )
          }
        }
      }
      parallel arch_tasks
    }
  }
}
